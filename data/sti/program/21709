r0 = openat$incfs(0xffffffffffffffff, 0x0, 0x0, 0x0)
sendmsg$AUDIT_LIST_RULES(r0, &(0x7f0000001e80)={&(0x7f0000001dc0)={0x10, 0x0, 0x0, 0x1000}, 0xc, 0x0}, 0x0)
socketpair(0x8, 0x0, 0xfffffffb, &(0x7f00000003c0)={0xffffffffffffffff, <r1=>0xffffffffffffffff})
sendmsg$AUDIT_DEL_RULE(r1, 0x0, 0x8010)
r2 = openat$incfs(0xffffffffffffffff, 0x0, 0x0, 0x0)
sendmsg$AUDIT_LIST_RULES(r2, &(0x7f0000001e80)={&(0x7f0000001dc0)={0x10, 0x0, 0x0, 0x1000}, 0xc, 0x0}, 0x0)
clock_gettime(0x0, &(0x7f0000000080)={<r3=>0x0, <r4=>0x0})
ioctl$vim2m_VIDIOC_QUERYBUF(r2, 0xc04c5609, &(0x7f00000000c0)={0x1ff, 0x3, 0x4, 0x10, 0x1f, {r3, r4/1000+10000}, {0x5, 0xc, 0x7, 0xff, 0x7, 0x6, "65dc3dd0"}, 0x0, 0x2, @offset=0x81, 0xc0})
sendmsg$AUDIT_LIST_RULES(0xffffffffffffffff, &(0x7f0000001e80)={&(0x7f0000001dc0), 0xc, 0x0}, 0x0)
socketpair(0x1, 0x4, 0x8, &(0x7f0000001480)={0xffffffffffffffff, <r5=>0xffffffffffffffff})
setsockopt$RDS_CANCEL_SENT_TO(r5, 0x114, 0x1, &(0x7f00000014c0)={0x2, 0x4e23, @multicast2}, 0x10)
r6 = openat$incfs(0xffffffffffffffff, 0x0, 0x0, 0x0)
sendmsg$AUDIT_LIST_RULES(r6, &(0x7f0000001e80)={&(0x7f0000001dc0)={0x10, 0x0, 0x0, 0x1000}, 0xc, 0x0}, 0x0)
ioctl$RTC_PLL_SET(r6, 0x401c7012, &(0x7f0000000040)={0x2, 0x7fffffff, 0xffffffff, 0x3, 0x8, 0x0, 0x1})
io_uring_register$IORING_UNREGISTER_PERSONALITY(0xffffffffffffffff, 0xa, 0x0, 0x0)
r7 = openat$loop_ctrl(0xffffff9c, &(0x7f0000000180)='/dev/loop-control\x00', 0x0, 0x0)
ioctl$LOOP_CTL_ADD(r7, 0x4c80, 0xa)
